// <auto-generated />
using Catalog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Catalog.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220723221310_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("catalog_item_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("catalog_material_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("catalog_source_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("Catalog.Data.Entities.CatalogItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_item_hilo");

                    b.Property<int>("AvailableStock")
                        .HasColumnType("integer");

                    b.Property<int>("CatalogMaterialId")
                        .HasColumnType("integer");

                    b.Property<int>("CatalogSourceId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("PictureFileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<double>("Size")
                        .HasColumnType("double precision");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CatalogMaterialId");

                    b.HasIndex("CatalogSourceId");

                    b.ToTable("CatalogItem", (string)null);
                });

            modelBuilder.Entity("Catalog.Data.Entities.CatalogMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_material_hilo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("CatalogMaterial", (string)null);
                });

            modelBuilder.Entity("Catalog.Data.Entities.CatalogSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_source_hilo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("CatalogSource", (string)null);
                });

            modelBuilder.Entity("Catalog.Data.Entities.CatalogItem", b =>
                {
                    b.HasOne("Catalog.Data.Entities.CatalogMaterial", "Material")
                        .WithMany()
                        .HasForeignKey("CatalogMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catalog.Data.Entities.CatalogSource", "Source")
                        .WithMany()
                        .HasForeignKey("CatalogSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Source");
                });
#pragma warning restore 612, 618
        }
    }
}
